WHITESPACE = _{ WHITE_SPACE }

main = _{
	SOI
	~ expression
	~ EOI
}


number = @{
    ASCII_DIGIT
    ~ number_digit*
    ~ ( "." ~ ASCII_DIGIT ~ number_digit* )?
}
number_digit = @{ ASCII_DIGIT | "_" }

ident = ${ interpolated | ident_literal }
ident_literal = @{ ident_start_chars ~ ident_chars* }
ident_start_chars = @{ "`" | CASED_LETTER }
ident_chars = @{ CASED_LETTER | NUMBER | "_" | "-" }

quoted_string = @{ "\"" ~ quoted_opt* ~ "\"" }
quoted_opt = _{ interpolated | quoted_run }
quoted_run = ${ quoted_inner+ }
quoted_inner = @{
    !("\"" | "\\" | "\n") ~ ANY
    | "\\" ~ ("\"" | "\\" | "n" | "r" | "t")
    | "\\" ~ ("u{" ~ ASCII_HEX_DIGIT{1,8} ~ "}")
    | "\\" ~ ("x" ~ ASCII_HEX_DIGIT{2})
}

// I'm not completely happy with multi_string. The rust code that find the indentation is pretty nasty.

multi_string = @{ "''\n" ~ multi_opt* ~ multi_run ~ "''" }
multi_opt = @{ multi_run ~ (interpolated | multi_run_newline) }
multi_run_newline = ${ "\n" }
multi_run = ${ multi_inner* }
multi_inner = @{
    !("''" | "\\" | "\n") ~ ANY
    | "\\" ~ ("''" | "\\" | "n" | "r" | "t")
    | "\\" ~ ("u{" ~ ASCII_HEX_DIGIT{1,8} ~ "}")
    | "\\" ~ ("x" ~ ASCII_HEX_DIGIT{2})
}

sigil = ${ 
    "~" ~ 
    sigil_name? ~ 
    PUSH("/" | "|" | "\"" | "'" | "#"+) ~ 
    sigil_opt ~
    POP
}
sigil_name = @{ LOWERCASE_LETTER+ }
sigil_opt = _{ interpolated | quoted_run }
sigil_run = ${ quoted_inner+ }
sigil_inner = @{
    !(PEEK | "\\") ~ ANY
    | "\\" ~ ("\\" | PEEK | "n" | "r" | "t")
    | "\\" ~ ("u{" ~ ASCII_HEX_DIGIT{1,8} ~ "}")
    | "\\" ~ ("x" ~ ASCII_HEX_DIGIT{2})
}

interpolated = !{ "\\(" ~ expression ~ ")" }

selector = !{ selector_item ~ ( "." ~ selector_item )+ }
selector_item = ${ selector_opt+ }
selector_opt = _{ interpolated | ident }

l_expression = _{ selector }

expression = !{ number | quoted_string | multi_string | sigil | l_expression }
